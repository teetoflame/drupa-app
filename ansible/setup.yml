---
- name: Set up Docker and Deploy Drupal
  hosts: drupal_servers
  become: yes
  vars_files:
    - vars.yml


  tasks:
    - name: Install required dependencies
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes


    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'


    - name: Ensure Docker repository is added
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker


    - name: Install Docker Engine and related packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes


    - name: Ensure Docker service is enabled and started
      systemd:
        name: docker
        enabled: yes
        state: started


    - name: Add user to Docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes


    - name: Verify Docker installation
      command: docker --version
      register: docker_version_output


    - name: Show Docker version
      debug:
        msg: "{{ docker_version_output.stdout }}"


    - name: Pull necessary Docker images
      community.docker.docker_image:
        name: "{{ item }}"
        source: pull
      loop:
        - mysql:8
        - drupal:{{ drupal_version }}


    - name: Create Docker network
      community.docker.docker_network:
        name: "{{ docker_network }}"


    - name: Create MySQL volume
      community.docker.docker_volume:
        name: "{{ mysql_volume }}"


    - name: Create Drupal site volume
      community.docker.docker_volume:
        name: "{{ drupal_volume }}"


    - name: Create MySQL container for Drupal
      community.docker.docker_container:
        name: "{{ mysql_container_name }}"
        image: mysql:8
        restart_policy: always
        networks:
          - name: "{{ docker_network }}"
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
          MYSQL_DATABASE: "{{ drupal_db_name }}"
          MYSQL_USER: "{{ drupal_db_user }}"
          MYSQL_PASSWORD: "{{ drupal_db_password }}"
        volumes:
          - "{{ mysql_volume }}:/var/lib/mysql"


    - name: Create Drupal container
      community.docker.docker_container:
        name: "{{ drupal_container_name }}"
        image: "drupal:{{ drupal_version }}"
        restart_policy: always
        networks:
          - name: "{{ docker_network }}"
        env:
          DRUPAL_DB_HOST: "{{ mysql_container_name }}"
          DRUPAL_DB_NAME: "{{ drupal_db_name }}"
          DRUPAL_DB_USER: "{{ drupal_db_user }}"
          DRUPAL_DB_PASSWORD: "{{ drupal_db_password }}"
        ports:
          - "{{ drupal_port }}:80"
        volumes:
          - "{{ drupal_volume }}:/var/www/html"


    - name: Show Drupal access URL
      debug:
        msg: "Drupal is accessible at http://{{ hostvars[inventory_hostname]['ansible_host'] }}:{{ drupal_port }}"
